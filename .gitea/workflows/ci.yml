name: CI

run-name: Build and deploy images

on:
  push:
    branches:
      - "main"

env:
  REGISTRY: gitea.antoine-langlois.net
  REPOSITORY: datahearth/act_runner

jobs:
  build-push-base:
    name: Build and push base image

    runs-on: debian-docker
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Gitea
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ gitea.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          target: base
          cache-to: type=inline
          cache-from: |
            type=registry,ref=${{ env.REPOSITORY }}:base
            type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:base
          tags: |
            ${{ env.REPOSITORY }}:base
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:base

  build-push-matrix:
    name: Build and push ${{ matrix.target }} image
    needs: build-push-base
    runs-on: debian-docker

    strategy:
      matrix:
        target: [docker, rust]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Gitea
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ gitea.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          target: ${{ matrix.target }}
          cache-to: type=inline
          cache-from: |
            type=registry,ref=${{ env.REPOSITORY }}:${{ matrix.target }}
            type=registry,ref=${{ env.REPOSITORY }}:base
            type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ matrix.target }}
            type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:base
          tags: |
            ${{ env.REPOSITORY }}:${{ matrix.target }}
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ matrix.target }}
